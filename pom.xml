<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.agrostar</groupId>
	<artifactId>Assigment</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>AgroStarAssigment</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<platformName>linux</platformName>
		<cucumber.version>1.2.5</cucumber.version>
		<log4j.configuration>log4j.properties</log4j.configuration>
		<tags>$(tags)</tags>
		<surefire.fork.count>3</surefire.fork.count>
	</properties>

	<build>
		<plugins>
			<!-- Maven compiler plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<!-- Maven Properties plugin which will write the properties in ${project.build.directory}/classes/framework.properties
				file -->
			<plugin>
				<groupId>org.kuali.maven.plugins</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>2.0.1</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<includeStandardMavenProperties>true</includeStandardMavenProperties>
							<outputFile>
								${project.build.directory}/classes/framework.properties
							</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.temyers</groupId>
				<artifactId>cucumber-jvm-parallel-plugin</artifactId>
				<version>4.2.0</version>
				<executions>
					<execution>
						<id>generateRunners</id>
						<phase>validate</phase>
						<goals>
							<goal>generateRunners</goal>
						</goals>
						<configuration>
							<!-- Mandatory -->
							<!-- comma separated list of package names to scan for glue code -->
							<glue>
								<package>com.agrostar.stepdefs</package>
							</glue>
							<!-- These are the default values -->
							<!-- Where to output the generated tests -->
							<outputDirectory>${project.build.directory}/generated-test-sources/cucumber</outputDirectory>
							<!-- The diectory, which must be in the root of the runtime classpath,
								containing your feature files. -->
							<featuresDirectory>src/test/resources/</featuresDirectory>
							<!-- Directory where the cucumber report files shall be written -->
							<cucumberOutputDir>target/cucumber-reports</cucumberOutputDir>
							<!-- comma separated list of output formats. For JUnit Rerun json,html,rerun
								are mandatory -->
							<format>json,html,rerun</format>
							<!-- CucumberOptions.strict property -->
							<strict>false</strict>
							<!-- CucumberOptions.monochrome property -->
							<monochrome>false</monochrome>
							<!-- The tags to run, maps to CucumberOptions.tags property -->
							<tags>
								<tag>${tags}</tag>
								<tag>~@Ignore</tag>
							</tags>
							<!-- If set to true, only feature files containing the required tags
								shall be generated. -->
							<!-- Excluded tags (~@notMe) are ignored. -->
							<filterFeaturesByTags>false</filterFeaturesByTags>
							<!-- Generate TestNG runners instead of JUnit ones. -->
							<useTestNG>false</useTestNG>
							<!-- The naming scheme to use for the generated test classes. One
								of 'simple' or 'feature-title' -->
							<namingScheme>simple</namingScheme>
							<!-- The class naming pattern to use. Only required/used if naming
								scheme is 'pattern'. -->
							<namingPattern>Parallel{c}IT</namingPattern>
							<!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per
								scenario. FEATURE generates a runner per feature. -->
							<parallelScheme>FEATURE</parallelScheme>
							<!-- Generate JUnitReRun runners instead of JUnit and TestNG single
								runner. -->
							<!-- <useJUnitReRun>true</useJUnitReRun> -->
							<!-- It is meaningless to keep reruning without looking for root cause
								of the failure. Test case/features/scenarios won't pass magically so you
								can use max 5 rerun. -->
							<retryCount></retryCount>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20.1</version>
				<configuration>
					<additionalClasspathElements>
						<additionalClasspathElement>resources</additionalClasspathElement>
					</additionalClasspathElements>
					<forkCount>${surefire.fork.count}</forkCount>
					<reuseForks>true</reuseForks>
					<includes>
						<include>**/*IT.class</include>
					</includes>
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>
			<plugin>
				<groupId>net.masterthought</groupId>
				<artifactId>maven-cucumber-reporting</artifactId>
				<version>3.10.0</version>
				<executions>
					<execution>
						<id>execution</id>
						<phase>verify</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<projectName>CustomerID</projectName>
							<outputDirectory>${project.build.directory}/kyc/cucumber-reports</outputDirectory>
							<cucumberOutput>${project.build.directory}/cucumber-reports/</cucumberOutput>
							<skippedFails>false</skippedFails>
							<enableFlashCharts>false</enableFlashCharts>
							<buildNumber>42</buildNumber>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.kuali.maven.plugins
										</groupId>
										<artifactId>
											properties-maven-plugin
										</artifactId>
										<versionRange>
											[2.0.1,)
										</versionRange>
										<goals>
											<goal>
												write-project-properties
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.github.temyers
										</groupId>
										<artifactId>
											cucumber-jvm-parallel-plugin
										</artifactId>
										<versionRange>
											[2.2.0,)
										</versionRange>
										<goals>
											<goal>generateRunners</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencies>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.version}</version>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-picocontainer</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.jsurfer</groupId>
			<artifactId>jsurfer-gson</artifactId>
			<version>1.4.3</version>
		</dependency>
		<dependency>
			<groupId>com.github.jsurfer</groupId>
			<artifactId>jsurfer-jackson</artifactId>
			<version>1.4.3</version>
		</dependency>
		<dependency>
			<groupId>com.github.jsurfer</groupId>
			<artifactId>jsurfer-fastjson</artifactId>
			<version>1.4.3</version>
		</dependency>
		<dependency>
			<groupId>com.github.jsurfer</groupId>
			<artifactId>jsurfer-jsonsimple</artifactId>
			<version>1.4.3</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>4.1.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.17</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp -->
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>3.10.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml-schemas -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>3.17</version>
		</dependency>
		<dependency>
			<groupId>com.github.temyers</groupId>
			<artifactId>cucumber-jvm-parallel-plugin</artifactId>
			<version>2.2.0</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20151123</version>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>2.9.0</version>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>json-path</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>io.appium</groupId>
			<artifactId>java-client</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.25</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.25</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.25</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.jayway.jsonpath/json-path -->
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.25</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.25</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.25</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>
</project>
